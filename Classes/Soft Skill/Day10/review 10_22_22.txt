review 10_22_22
=================

questions from you
- stick with the defect 
- at work when you are going to get US and AC - it should have all positive scenarios already - in AC, even some companies put negative as well
- then as a tester you can use your creativity, and make better test scenarios and test all the possibility even exceptions 
- what is negative AC
- for ex. dev team choosed some US. are these US for both developers and QAs? 
User Story goes to developer to develop then goes to tester to test 

-  or are some of these US for developers? 
- and some of them for QAs? 
- or can everyone work for every US? 
- and what if the number of people and the number of criteria do not match? 
- for ex.there are no US for QAs and ten US for developers and there are 3 QA and 5 developers ? 
- what will these QAs do?

- there might be some user stories only for QA
- there might be some user stories only for DEV 
- Project management tool is jira - everything is documented there - US, EPic
- confluence page, where you store information about your project or team
- each company has their own way of evaluation of employees


========================
- Sprint Planning 

Definition of Ready
- (when) in the sprint planning meeting 
- (what)is a checklist for the dev team to take the user story to work 
- (who) creates it? scrum team together. 

1. User Story should have clear description 
2. User Story should have clear acceptance criteria 
3. User Story and acceptance criteria are written in gherkin language 
4. It is small enough to be developed and tested during the sprint 
5. Test data is included to the user story 

=================================================

User Story matches Invest: 
I - Independent - to the extent possible, doesn’t depend on other stories
N- Negotiable - A story is a conversation starter, not the end result. Never talks about “how”
V- Valuable - Something this adds value to the user
E- Estimable - No Research Required, well understood 
S- Small - Should not take more than one sprint to finish 
T- Testable - Actually able to test it

M - Measurable - Clearly specifies what the team needs to do to achieve the objective
A - Attainable - Should be able to achieve the objective within the teams
R - Relevant - Should be specific to the value being delivered
S - Specific - States the intended outcome as simply, and concisely as possible



=> Definition of Done
=======================
- (when) demo (Sprint Review) 
- (what) check list for Product Owner to accept the story
- (who) mostly PO and scrum adds some points  

that could differ from project to project
1. Test scenarios have been reviewed by client (maybe team / or PO / lead)
2. Development code had peer reviewed and documented 
3. Testing has been completed - functional (manual) 
4. Automation testing had been completed (if applicable)
5. Any defects fixed or deferred or marked as an known issue 
6. All test results documented 
7. Demoed to the PO / client
8. Accepted (signed off)

========================


























